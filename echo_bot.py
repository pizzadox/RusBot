import telebot
from telebot import types

# –ü–æ–¥–∫—é—á–∞–µ–º –ë–î

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–æ–¥—É–ª—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ ( –Ω–µ —Ñ–∞–∫—Ç —á—Ç–æ —Ç—É—Ç, —Ç–∞–∫ –∫–∞–∫ –±—É–¥e—Ç —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Ñ–∞–π–ª–æ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∏–¥–∞ –ø—Ä–æ—Ñ–∏–ª—è –∏ —Ç–∏–ø–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫–∏–∏

bot = telebot.TeleBot('5882698434:AAEQiUxsNuWmO3tesY7IU1fE-t9fPIc9xCQ')

import re # —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ —Ä–∞–∑–º–µ—Ä–∞. "—Ä–∞–∑–º–µ—Ä x y" –∏–ª–∏ "—Ä–∞–∑–º–µ—Ä x/y"
szPtrn = re.compile(r'—Ä–∞–∑–º–µ—Ä \d{3,4}(\s+|/)\d{3,4}$')
isNum  = re.compile(r'^\d{3,4}$')
oknoConst = re.compile(r'–æ–∫–Ω–æ') # –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤—ã–±–æ—Ä –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –æ–∫–Ω–∞
class BotState():
    State = "start" #—Å–æ—Å—Ç–æ–Ω–∏–µ. –ø–æ–∫–∞ —Å—Ç—Ä–æ–∫–æ–π, –Ω–æ –Ω–∞–¥–æ —ç—Ç–æ –æ–±—å—è–≤–ª—è—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É
    width=0; height =0 # –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤ —Å—Ç—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    def __init__(self):
        self.State = ""
    def __repr__(self):
        ans = self.State + " width %d " % self.width + " height  %d " % self.height
        return ans
b = BotState()
bStates = {} # bStates[userid]
import okno #—Ñ–æ—Ä–º—É–ª—ã –æ—Ç –∑–∞–∫–∞–∑—á–∏–∫–∞

@bot.message_handler(commands=['debug'])
def dbg(message):
    print (bStates)
    bot.send_message(message.from_user.id, 'DBG OK')
@bot.message_handler(commands=['start'])
def start(message):
    if message.from_user.id not in bStates.keys():
        bStates[message.from_user.id] = BotState()
        print (message.from_user.id)  #dbg
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    markup.add(btn1)
    bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç-–ø–æ–º–æ—à–Ω–∏–∫!", reply_markup=markup)

@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.from_user.id not in bStates.keys():
        bStates[message.from_user.id] = BotState()
        print (message.from_user.id)  #dbg
    b = bStates[message.from_user.id]  # —Å—Å—ã–ª–∫–∞, –Ω–µ –∫–æ–ø–∏—è, –ø–æ –∏–¥–µ–µ. —Ç.–µ. –ø—É–Ω–∫—Ç —Å–ø–∏—Å–∫–∞ –∏–∑–º–µ–Ω—Ç—å—Å—è –¥–æ–ª–∂–µ–Ω

    if message.text == 'üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
        btn1 = types.KeyboardButton('–æ–∫–Ω–æ')
        btn2 = types.KeyboardButton('–ù—É–∂–Ω–∞ –î–≤–µ—Ä—å')
        btn3 = types.KeyboardButton('–°–æ–≤–µ—Ç—ã')
        btn4 = types.KeyboardButton('–ó–Ω–∞—é —Ä–∞–∑–º–µ—Ä')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.from_user.id, '‚ùì –ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å', reply_markup=markup) #–æ—Ç–≤–µ—Ç –±–æ—Ç–∞


    elif message.text == '–ù—É–∂–Ω–æ –û–∫–Ω–æ':
        bot.send_message(message.from_user.id, '–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ –ø–æ–Ω–∏–º–∞–µ—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ ?\n \n–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø–æ ' + '[—Å—Å—ã–ª–∫–µ](https://oknarus.com/tpost/mclj26nlh1-zaklinilo-okno-chto-delat)', parse_mode='Markdown')

    elif message.text == '–ù—É–∂–Ω–∞ –î–≤–µ—Ä—å':
        bot.send_message(message.from_user.id, '–ü—Ä–æ—á–∏—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ —Å–∞–π—Ç–∞ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ ' + '[—Å—Å—ã–ª–∫–µ](https://oknarus.com/tpost/etcd6k6t11-okna-i-pozharnaya-bezopasnost)', parse_mode='Markdown')

    elif message.text == '–°–æ–≤–µ—Ç—ã':
        bot.send_message(message.from_user.id, '–ü–æ–¥—Ä–æ–±–Ω–æ –ø—Ä–æ —Å–æ–≤–µ—Ç—ã –ø–æ ' + '[—Å—Å—ã–ª–∫–µ](https://oknarus.com/#services)', parse_mode='Markdown')
    # –≤—ã–±–æ—Ä –æ–∫–Ω–∞
    elif oknoConst.match(message.text):
        oknoConstr = []
        oknoConstr = okno.window
        print(oknoConstr)

        name = oknoConstr[0]
        description = okno.window(1)
        image = okno.window(2)
        print(name, description, image, oknoConstr)
        bot.send_message(message.from_user.id, '–°—á–∏—Ç–∞–µ–º –û–∫–Ω–æ', parse_mode='Markdown')

    elif szPtrn.match( message.text): # —Ä–∞–∑–º–µ—Ä —á–∏—Å–ª–æ1 —á–∏—Å–ª–æ2 (3-4—Ö –∑–Ω–∞—á–Ω—ã–µ
        words = message.text.split()
        a=int(words[1])
        b=int(words[2])
        otvet = okno.answer(a,b)
        # from okno import window_filling on begin this file
        bot.send_message(message.from_user.id,  "___\n"  + otvet)
        # –í–æ—Ç —Ç—É—Ç –≤—ã–≤–µ—Å—Ç–∏
    elif isNum.match( message.text):
        num = int(message.text) # –∑–¥–µ—Å—å —Ç–æ—á–Ω–æ —á–∏—Å–ª–æ
        if b.State == 'get_size': # –°–Ω–∞—á–∞–ª–∞ —à–∏—Ä–∏–Ω–∞
            bot.send_message(message.from_user.id, "–®–∏—Ä–∏–Ω–∞ —Å–æ—Å—Ç–∞–≤–∏–ª–∞ %d –º–º. –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤—ã—Å–æ—Ç—É" % num)
            b.width = num; b.State = "know_width"
        elif b.State == 'know_width': # —à–∏—Ä–∏–Ω—É –∑–Ω–∞–µ–º. —Ç–µ–ø–µ—Ä—å –≤—ã—Å–æ—Ç—É
            b.height = num; b.State ='know_size'
            otvet = okno.answer(b.width, b.height)
            bot.send_message(message.from_user.id,otvet)
    elif message.text == '–ó–Ω–∞—é —Ä–∞–∑–º–µ—Ä':
        if b.State != 'know_size':
            bot.send_message(message.from_user.id, '–®–∏—Ä–∏–Ω–∞ —Å–æ—Å—Ç–∞–≤–∏—Ç :', parse_mode='Markdown')
            b.State = "get_size"
        else:
            otvet = okno.answer(b.width, b.height)
            bot.send_message(message.from_user.id, otvet)
            b.State = '' # —Å–±—Ä–æ—Å –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π


        # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç—ã —Å —É—Å–ª–æ–≤–∏–µ–º
bot.polling(none_stop=True, interval=0) #–Ω–µ –æ—Ç–∫–ª—é—á–∞–µ–º—Å—è –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞
